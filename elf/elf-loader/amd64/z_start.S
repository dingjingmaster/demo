	.text                               # 代码段，当程序被汇编和链接后，.text段中的指令会被加载到计算机内存中，按照顺序执行。
	.align	4                           # .align 是一个指令或伪指令，用于对数据或指令进行对齐操作。
                                        # 对齐是指将数据或指令按照特定的字节边界对齐，以满足特定的要求或优化内存访问
                                        # 对齐用于如下几个方面：
                                        # 1. 内存对齐：某些体系结构中，访问未对齐数据会导致性能下降或者错误
                                        # 2. 指令对齐：一些处理器要求指令按照特定的边界对齐，否则会导致性能下降或错误
                                        # 3. 数据互填充：为满足对齐要求填充数据

	.globl	z_start                     # .global 是一个伪指令，用于声明一个全局符号。全局符号是指在程序中可以被其它模块或文件访问和引用的标识符，比如：函数名、全局变量名等
                                        # .global 指令作用有以下几个方面：
                                        # 1. 全局可见性：通过使用此符号，可以将一个标识符声明为全局符号
                                        # 2. 连接器处理：在多个源文件组成的程序中，连接器需要知道哪些符号是全局的，以便在链接阶段解析符号引用。通过使用 .global 指令，可以为连接器提供必要的信息，使其能正确地解析和链接全局符号。

	.hidden	z_start                     # .hidden 是一个伪指令，用于将符号声明为 隐藏符号，使其在程序中不可见或者不可引用。这样其它模块或文件无法访问和引用该符号，只有当前模块中的代码可以使用该符号。
                                        # 防止符号冲突：多个模块或文件，如果各自有相同名称的局部符号可能导致冲突，使用此指令避免
                                        # 优化和封装：提供信息隐藏和封装的效果。隐藏符号对程序外部使用者来说是不可见的。

	.type	z_start,@function           # 指定符号的类型

z_start:
	mov	%rsp,	%rdi                    # %rsp 是栈指针寄存器，指向栈的顶部；%rdi 是第一个函数参数寄存器，用于传递函数调用时的第一个参数。
                                        # 在函数调用时候，将栈指针的值作为第一个参数传递给被调用的函数
	mov	%rdx,	%rsi                    # %rdx 是一个通用寄存器；%rsi 是第二个函数参数寄存器
                                        # 在函数调用时候将 rdx 的值作为第二个参数传递给被调用函数
	call	z_entry
	hlt

